import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	static int N;
	static int right = 0;
	static int up = 1;
	static int left = 2;
	static int down = 3;
	static int size = 101;
	static boolean map[][] = new boolean[size][size];
	static int ans;
	
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		N = Integer.parseInt(br.readLine());

		int x, y, d, g;

		for (int i = 0; i < N; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			x = Integer.parseInt(st.nextToken());
			y = Integer.parseInt(st.nextToken());
			d = Integer.parseInt(st.nextToken());
			g = Integer.parseInt(st.nextToken());

			draw(x, y, d, g);
		}
		
		System.out.println(ans);
	}

	static void draw(int x, int y, int d, int g) {
		
	}

	static void getResult() {
		for(int i=0; i<size; i++) {
			for(int j=0; j<size; j++) {
				if(map[i][j] && map[i+1][j] && map[i][j+1] && map[i+1][j+1])
					ans++;
			}
		}
	}
}
