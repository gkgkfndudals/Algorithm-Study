import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String s = br.readLine();

		System.out.println(getResult(s));
		
	}

	static boolean isPalindrome(String input) {
		int len = input.length();
		for (int i = 0; i < len; i++) {
			if (input.charAt(i) != input.charAt(len - i - 1))
				return false;
		}
		return true;
	}
	
	private static int getResult(String input_Str) {
		// 팰린드롬을 완성시키는 최소의 문자 개수 리턴
		// input_Str을 받아서 0번 인덱스부터 부분적으로 팰린드롬인지 검사한다
		// 0번 인덱스부터 팰린드롬이라면 문자를 추가할 필요가 없다 (그 자체가 팰린드롬)
		// 0번 인덱스부터 팰린드롬이 아니라면 팰린드롬이 완성되는 문자열 이전에 있던 팰린드롬이 아닌 문자열을 뒤에 대칭시키면 팰린드롬이 완성된다
		// 마지막 인덱스까지 팰린드롬이 아니면 최악의 경우이므로, 2배를 하여 전체를 대칭시킨다

		int len = input_Str.length();
		for (int i = 0; i < len; i++) {
			if (isPalindrome(input_Str.substring(i))) {
				return i + len;
			}
		}
		return len * 2; // 결국 팰린드롬이 아닌 경우 
	}



}
